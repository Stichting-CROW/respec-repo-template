name: Nieuwe repo voorbereiden

on:
  push:
  workflow_dispatch:

env:
  DOCS_HOME: "https://docs.crow.nl"

permissions:
  contents: write

jobs:
  setup-repo:
    if: ${{ github.repository != 'Stichting-CROW/respec-repo-template' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get code 🛂
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}

      - name: Calculate variables 🛂
        run: |
          echo "REPO_NAME=$(echo '${{ github.repository }}' | cut -d'/' -f2 )" >> $GITHUB_ENV

      - name: Install cookiecutter 🍪
        run: pip3 install cookiecutter

      - name: Calculate document metadata 🧾
        uses: actions/github-script@v4
        id: fetch-repo-and-user-details
        with:
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) {
                name
                description
                owner {
                  login
                  ... on User {
                    name
                  }
                  ... on Organization {
                    name
                  }
                }
              }
            }`;
            const variables = {
              owner: ${{ github.actor }},
              name: context.repo.repo
            }
            const result = await github.graphql(query, variables)
            console.log(result)
            return result

      - name: Rebuild contents using cookiecutter 👷‍♀️
        env:
          INFO: ${{ steps.fetch-repo-and-user-details.outputs.result }}
        run: |
          # Run cookiecutter
          pushd /tmp
          cookiecutter gh:stichting-crow/respec-document-template --no-input \
            document_short_name=$REPO_NAME \
            repository_name=$REPO_NAME \
            document_title="$(echo $INFO | jq -r .repository.description)" \
            document_type="technische documentatie" \
            first_editor="${{ github.actor }}" \
            on_review_track=NO

          popd
          # Move generated content to root directory of repo
          mkdir docs
          mv /tmp/$REPO_NAME/* docs/
          # Delete the setup.yml workflow, it has served its purpose
          rm .github/workflows/setup.yml
          # Replace the template README with the repo README
          rm README.md
          mv README_AFTER_CLONE.md README.md

      - name: Calculate destination 🏖
        run: |
          echo "LIVE_URL=$DOCS_HOME/$REPO_NAME/$REPO_NAME" >> $GITHUB_ENV

      - name: Force push new repo contents 🚀
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: |
            Initialize new ReSpec repository

            Reason: run setup.yaml after clone by ${{ github.actor }}


            Co-authored-by: stichting-crow-klusjesbot <84876605+stichting-crow-klusjesbot@users.noreply.github.com>
          commit_user_name: stichting-crow-klusjesbot
          commit_user_email: 84876605+stichting-crow-klusjesbot@users.noreply.github.com
          push_options: --force

      - name: Start GitHub Pages 🌍
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pages \
            -d '{"source":{"branch":"main","path":"/docs"}}'
          curl \
            -X PUT \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pages \
            -d '{"https_enforced":true}'

      - name: Notify docs.crow.nl 🔔
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.NOTIFY_DOCS_CROW_NL }}" \
            https://api.github.com/repos/stichting-crow/stichting-crow.github.io/dispatches \
            -d '{"event_type":"respec-register-new-repository","client_payload":{"repo":"$REPO_NAME","doc":"$REPO_NAME","url":"$LIVE_URL"}}'

      - name: Start auto-publishing for the first run
        uses: ./.github/workflows/auto-publish.yaml

      - name: Report to log 😎
        run: |
          echo "| Status                | Waarde       |" >> $GITHUB_STEP_SUMMARY
          echo "| --------------------- | ------------ |" >> $GITHUB_STEP_SUMMARY
          echo "| Begin met werken in:  | 🎁 `docs/$REPO_NAME/$REPO_NAME` |" >> $GITHUB_STEP_SUMMARY
          echo "| Werkdocument live op: | 🟡 $LIVE_URL |" >> $GITHUB_STEP_SUMMARY
